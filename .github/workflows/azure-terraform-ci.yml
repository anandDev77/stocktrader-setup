name: Azure Terraform CI

on:
  pull_request:
    paths:
      - 'azure/**'
      - '.github/workflows/azure-terraform-ci.yml'
  push:
    branches: [ main ]
    paths:
      - 'azure/**'
      - '.github/workflows/azure-terraform-ci.yml'

permissions:
  contents: read

jobs:
  terraform:
    name: terraform fmt/init/validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform fmt (recursive)
        run: terraform -chdir=azure fmt -check -recursive

      - name: Terraform init (no backend)
        run: terraform -chdir=azure init -backend=false -upgrade

      - name: Terraform validate
        run: terraform -chdir=azure validate

  shellcheck:
    name: shellcheck (azure/*.sh)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run shellcheck
        shell: bash
        run: |
          set -euo pipefail
          if command -v shellcheck >/dev/null 2>&1; then
            true
          else
            sudo apt-get update -y
            sudo apt-get install -y shellcheck
          fi
          # Only check scripts under azure/; don't fail the build on style warnings initially
          mapfile -t files < <(git ls-files 'azure/**/*.sh' 'azure/*.sh' || true)
          if [ ${#files[@]} -eq 0 ]; then
            echo "No shell scripts to lint."
            exit 0
          fi
          echo "Linting ${#files[@]} shell scripts with shellcheck..."
          # Exclude common CI false-positives; treat findings as warnings for now
          set +e
          shellcheck -S style --exclude=SC1091,SC2155,SC2086,SC2046 "${files[@]}"
          exit 0


